// This is an autogenerated file. DO NOT change its contents manually.
'use server';

/**
 * @fileOverview A schedule adjustment AI agent.
 *
 * - suggestScheduleAdjustments - A function that handles the schedule adjustment process.
 * - ScheduleAdjustmentsInput - The input type for the suggestScheduleAdjustments function.
 * - ScheduleAdjustmentsOutput - The return type for the suggestScheduleAdjustments function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ScheduleAdjustmentsInputSchema = z.object({
  lifestyleSummary: z
    .string()
    .describe("A summary of the user's lifestyle, including daily habits and preferences."),
  currentSchedule: z
    .string()
    .describe('A detailed description of the user’s current schedule.'),
  userGoals: z
    .string()
    .describe('The user’s goals, such as increasing productivity or improving well-being.'),
});
export type ScheduleAdjustmentsInput = z.infer<typeof ScheduleAdjustmentsInputSchema>;

const ScheduleAdjustmentsOutputSchema = z.object({
  suggestedAdjustments: z
    .string()
    .describe('A list of suggested adjustments to the schedule.'),
  rationale: z
    .string()
    .describe('The rationale behind each suggested adjustment, explaining how it would help the user achieve their goals.'),
});
export type ScheduleAdjustmentsOutput = z.infer<typeof ScheduleAdjustmentsOutputSchema>;

export async function suggestScheduleAdjustments(
  input: ScheduleAdjustmentsInput
): Promise<ScheduleAdjustmentsOutput> {
  return suggestScheduleAdjustmentsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestScheduleAdjustmentsPrompt',
  input: {schema: ScheduleAdjustmentsInputSchema},
  output: {schema: ScheduleAdjustmentsOutputSchema},
  prompt: `You are a personal schedule optimization assistant. You will analyze the user's lifestyle, current schedule, and goals, then suggest minor adjustments to the schedule to potentially increase productivity or well-being.

Lifestyle Summary: {{{lifestyleSummary}}}
Current Schedule: {{{currentSchedule}}}
User Goals: {{{userGoals}}}

Based on this information, suggest concrete adjustments to the user's schedule. Explain the rationale behind each suggestion, focusing on how it would help the user achieve their goals. Focus on adjustments that would improve productivity and creativity, such as changing when they engage in creative work.

Output the suggested adjustments in a well-structured format.

{{output}}`,
});

const suggestScheduleAdjustmentsFlow = ai.defineFlow(
  {
    name: 'suggestScheduleAdjustmentsFlow',
    inputSchema: ScheduleAdjustmentsInputSchema,
    outputSchema: ScheduleAdjustmentsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
